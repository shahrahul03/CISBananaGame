{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isAuthenticated: !!localStorage.getItem(\"authToken\"),\n  // Check if there's a token in localStorage\n  userRole: localStorage.getItem(\"user\"),\n  // Retrieve user role from localStorage\n  token: localStorage.getItem(\"authToken\") // Retrieve token from localStorage\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login(state, action) {\n      state.isAuthenticated = true;\n      state.userRole = action.payload.role;\n      state.token = action.payload.token;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n      state.userRole = null;\n      state.token = null;\n      localStorage.removeItem(\"authToken\");\n    },\n    setToken(state, action) {\n      state.token = action.payload.token;\n    }\n  }\n});\nexport const {\n  login,\n  logout,\n  setToken\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isAuthenticated","localStorage","getItem","userRole","token","authSlice","name","reducers","login","state","action","payload","role","logout","removeItem","setToken","actions","reducer"],"sources":["C:/Users/Roushan/Desktop/BananaGUI/bananafrontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: !!localStorage.getItem(\"authToken\"), // Check if there's a token in localStorage\r\n  userRole: localStorage.getItem(\"user\"), // Retrieve user role from localStorage\r\n  token: localStorage.getItem(\"authToken\"), // Retrieve token from localStorage\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.isAuthenticated = true;\r\n      state.userRole = action.payload.role;\r\n      state.token = action.payload.token;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n      state.userRole = null;\r\n      state.token = null;\r\n      localStorage.removeItem(\"authToken\");\r\n    },\r\n    setToken(state, action) {\r\n      state.token = action.payload.token;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout, setToken } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAAE;EACtDC,QAAQ,EAAEF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAAE;EACxCE,KAAK,EAAEH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAE;AAC5C,CAAC;AAED,MAAMG,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnBD,KAAK,CAACT,eAAe,GAAG,IAAI;MAC5BS,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO,CAACC,IAAI;MACpCH,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;IACpC,CAAC;IACDS,MAAMA,CAACJ,KAAK,EAAE;MACZA,KAAK,CAACT,eAAe,GAAG,KAAK;MAC7BS,KAAK,CAACN,QAAQ,GAAG,IAAI;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;MAClBH,YAAY,CAACa,UAAU,CAAC,WAAW,CAAC;IACtC,CAAC;IACDC,QAAQA,CAACN,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;IACpC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,KAAK;EAAEK,MAAM;EAAEE;AAAS,CAAC,GAAGV,SAAS,CAACW,OAAO;AAC5D,eAAeX,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}