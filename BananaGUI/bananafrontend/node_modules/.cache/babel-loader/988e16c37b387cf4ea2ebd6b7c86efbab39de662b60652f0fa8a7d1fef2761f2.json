{"ast":null,"code":"export const validateLoginForm=(email,password)=>{const errors={};if(!email){errors.email=\"Email is required\";}if(!password){errors.password=\"Password is required\";}return errors;};export const validateRegistrationForm=(email,password,name,address,contactNumber)=>{const errors={};if(!name){errors.registerName=\"Name is required\";}if(!email){errors.registerEmail=\"Email is required\";}if(!password){errors.registerPassword=\"Password is required\";}if(!address){errors.registerAddress=\"Address is required\";}if(!contactNumber){errors.registerContactNumber=\"Contact number is required\";}return errors;};export const validateForgotPasswordForm=email=>{const errors={};if(!email){errors.forgotPasswordEmail=\"Email is required\";}return errors;};","map":{"version":3,"names":["validateLoginForm","email","password","errors","validateRegistrationForm","name","address","contactNumber","registerName","registerEmail","registerPassword","registerAddress","registerContactNumber","validateForgotPasswordForm","forgotPasswordEmail"],"sources":["C:/Users/Roushan/Desktop/BananaGUI/bananafrontend/src/Components/validation.js"],"sourcesContent":["export const validateLoginForm = (email, password) => {\r\n  const errors = {};\r\n  if (!email) {\r\n    errors.email = \"Email is required\";\r\n  }\r\n  if (!password) {\r\n    errors.password = \"Password is required\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const validateRegistrationForm = (\r\n  email,\r\n  password,\r\n  name,\r\n  address,\r\n  contactNumber\r\n) => {\r\n  const errors = {};\r\n  if (!name) {\r\n    errors.registerName = \"Name is required\";\r\n  }\r\n  if (!email) {\r\n    errors.registerEmail = \"Email is required\";\r\n  }\r\n  if (!password) {\r\n    errors.registerPassword = \"Password is required\";\r\n  }\r\n  if (!address) {\r\n    errors.registerAddress = \"Address is required\";\r\n  }\r\n  if (!contactNumber) {\r\n    errors.registerContactNumber = \"Contact number is required\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const validateForgotPasswordForm = (email) => {\r\n  const errors = {};\r\n  if (!email) {\r\n    errors.forgotPasswordEmail = \"Email is required\";\r\n  }\r\n  return errors;\r\n};\r\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,iBAAiB,CAAGA,CAACC,KAAK,CAAEC,QAAQ,GAAK,CACpD,KAAM,CAAAC,MAAM,CAAG,CAAC,CAAC,CACjB,GAAI,CAACF,KAAK,CAAE,CACVE,MAAM,CAACF,KAAK,CAAG,mBAAmB,CACpC,CACA,GAAI,CAACC,QAAQ,CAAE,CACbC,MAAM,CAACD,QAAQ,CAAG,sBAAsB,CAC1C,CACA,MAAO,CAAAC,MAAM,CACf,CAAC,CAED,MAAO,MAAM,CAAAC,wBAAwB,CAAGA,CACtCH,KAAK,CACLC,QAAQ,CACRG,IAAI,CACJC,OAAO,CACPC,aAAa,GACV,CACH,KAAM,CAAAJ,MAAM,CAAG,CAAC,CAAC,CACjB,GAAI,CAACE,IAAI,CAAE,CACTF,MAAM,CAACK,YAAY,CAAG,kBAAkB,CAC1C,CACA,GAAI,CAACP,KAAK,CAAE,CACVE,MAAM,CAACM,aAAa,CAAG,mBAAmB,CAC5C,CACA,GAAI,CAACP,QAAQ,CAAE,CACbC,MAAM,CAACO,gBAAgB,CAAG,sBAAsB,CAClD,CACA,GAAI,CAACJ,OAAO,CAAE,CACZH,MAAM,CAACQ,eAAe,CAAG,qBAAqB,CAChD,CACA,GAAI,CAACJ,aAAa,CAAE,CAClBJ,MAAM,CAACS,qBAAqB,CAAG,4BAA4B,CAC7D,CACA,MAAO,CAAAT,MAAM,CACf,CAAC,CAED,MAAO,MAAM,CAAAU,0BAA0B,CAAIZ,KAAK,EAAK,CACnD,KAAM,CAAAE,MAAM,CAAG,CAAC,CAAC,CACjB,GAAI,CAACF,KAAK,CAAE,CACVE,MAAM,CAACW,mBAAmB,CAAG,mBAAmB,CAClD,CACA,MAAO,CAAAX,MAAM,CACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}