{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roushan\\\\Desktop\\\\BananaGUI\\\\bananafrontend\\\\src\\\\Components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game({\n  username\n}) {\n  _s();\n  const [score, setScore] = useState(0);\n  const [steps, setSteps] = useState(0);\n  const [gameData, setGameData] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [message, setMessage] = useState(\"\"); // New state for displaying messages\n\n  // Fetch Game Data\n  useEffect(() => {\n    fetchGame();\n  }, []);\n  const fetchGame = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/bananagame-1.0-SNAPSHOT/api/game\");\n      const data = await response.json();\n      setGameData(data);\n      setMessage(\"\"); // Reset message on new game load\n    } catch (error) {\n      console.error(\"Error fetching game data:\", error);\n    }\n  };\n  const handleAnswer = selected => {\n    setSteps(steps + 1);\n    if (selected === gameData.solution) {\n      setScore(score + 1);\n      setMessage(`Correct! You answered in ${steps + 1} steps.`);\n      setGameOver(true);\n    } else {\n      setMessage(\"Wrong answer. Try again!\");\n    }\n  };\n  const playAgain = () => {\n    setSteps(0);\n    setScore(0);\n    setGameOver(false);\n    setMessage(\"\"); // Clear the message\n    fetchGame();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container p-6 bg-white shadow-lg rounded-lg max-w-md mx-auto\",\n    children: gameData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-semibold mb-6 text-center\",\n        children: [\"Welcome, \", username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/png;base64,${gameData.imageBase64}`,\n        alt: \"Banana game puzzle\",\n        className: \"w-full h-64 object-cover mb-6 rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-around mb-6\",\n        children: [...Array(10).keys()].map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(num),\n          className: \"bg-blue-500 text-white p-4 rounded-lg shadow-md hover:bg-blue-600 transition duration-300\",\n          children: num\n        }, num, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-700\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-green-600 mb-4\",\n          children: [\"You answered correctly in \", steps, \" steps!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playAgain,\n          className: \"bg-green-500 text-white p-4 rounded-lg shadow-md hover:bg-green-600 transition duration-300\",\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"71Fij7O/j7sPFRUQrkZdzLTm5aA=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","username","_s","score","setScore","steps","setSteps","gameData","setGameData","gameOver","setGameOver","message","setMessage","fetchGame","response","fetch","data","json","error","console","handleAnswer","selected","solution","playAgain","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","imageBase64","alt","Array","keys","map","num","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Roushan/Desktop/BananaGUI/bananafrontend/src/Components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Game({ username }) {\r\n  const [score, setScore] = useState(0);\r\n  const [steps, setSteps] = useState(0);\r\n  const [gameData, setGameData] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [message, setMessage] = useState(\"\"); // New state for displaying messages\r\n\r\n  // Fetch Game Data\r\n  useEffect(() => {\r\n    fetchGame();\r\n  }, []);\r\n\r\n  const fetchGame = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:8080/bananagame-1.0-SNAPSHOT/api/game\"\r\n      );\r\n      const data = await response.json();\r\n      setGameData(data);\r\n      setMessage(\"\"); // Reset message on new game load\r\n    } catch (error) {\r\n      console.error(\"Error fetching game data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAnswer = (selected) => {\r\n    setSteps(steps + 1);\r\n    if (selected === gameData.solution) {\r\n      setScore(score + 1);\r\n      setMessage(`Correct! You answered in ${steps + 1} steps.`);\r\n      setGameOver(true);\r\n    } else {\r\n      setMessage(\"Wrong answer. Try again!\");\r\n    }\r\n  };\r\n\r\n  const playAgain = () => {\r\n    setSteps(0);\r\n    setScore(0);\r\n    setGameOver(false);\r\n    setMessage(\"\"); // Clear the message\r\n    fetchGame();\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container p-6 bg-white shadow-lg rounded-lg max-w-md mx-auto\">\r\n      {gameData && (\r\n        <>\r\n          <h1 className=\"text-2xl font-semibold mb-6 text-center\">\r\n            Welcome, {username}!\r\n          </h1>\r\n\r\n          <img\r\n            src={`data:image/png;base64,${gameData.imageBase64}`}\r\n            alt=\"Banana game puzzle\"\r\n            className=\"w-full h-64 object-cover mb-6 rounded-lg\"\r\n          />\r\n\r\n          <div className=\"flex justify-around mb-6\">\r\n            {[...Array(10).keys()].map((num) => (\r\n              <button\r\n                key={num}\r\n                onClick={() => handleAnswer(num)}\r\n                className=\"bg-blue-500 text-white p-4 rounded-lg shadow-md hover:bg-blue-600 transition duration-300\"\r\n              >\r\n                {num}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Display message based on answer */}\r\n          {message && (\r\n            <div className=\"text-center mb-6\">\r\n              <p className=\"text-lg text-gray-700\">{message}</p>\r\n            </div>\r\n          )}\r\n\r\n          {gameOver && (\r\n            <div className=\"text-center\">\r\n              <p className=\"text-lg text-green-600 mb-4\">\r\n                You answered correctly in {steps} steps!\r\n              </p>\r\n              <button\r\n                onClick={playAgain}\r\n                className=\"bg-green-500 text-white p-4 rounded-lg shadow-md hover:bg-green-600 transition duration-300\"\r\n              >\r\n                Play Again\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}